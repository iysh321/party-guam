import { CommandBus, QueryBus } from '@nestjs/cqrs';
import { DecodedPayload } from 'src/auth/jwt.payload';
import { PartyRequestDto } from './dto/request/party.param.request.dto';
import { PartyCommentRequestDto } from './dto/request/party-comment.request.dto';
import { CreatePartyRequestDto } from './dto/request/create-party.request.dto';
import { UpdatePartyRequestDto } from './dto/request/update-party.request.dto';
import { PartyQueryRequestDto } from './dto/request/party.query.request.dto';
import { PartyResponseDto } from './dto/response/party.response.dto';
import { CommentRequestDto } from './dto/request/comment.param.request.dto';
export declare class PartyController {
    private commandBus;
    private queryBus;
    constructor(commandBus: CommandBus, queryBus: QueryBus);
    getParty(param: PartyRequestDto): Promise<PartyResponseDto>;
    getParties(query: PartyQueryRequestDto): Promise<PartyResponseDto>;
    createParty(payload: DecodedPayload, dto: CreatePartyRequestDto): Promise<void>;
    updateParty(payload: DecodedPayload, param: PartyRequestDto, dto: UpdatePartyRequestDto): Promise<void>;
    deleteParty(payload: DecodedPayload, param: PartyRequestDto): Promise<void>;
    getlikes(payload: DecodedPayload, query: PartyQueryRequestDto): Promise<void>;
    createPartyToLike(payload: DecodedPayload, param: PartyRequestDto): Promise<void>;
    deletePartyToLike(payload: DecodedPayload, param: PartyRequestDto): Promise<void>;
    createPartyComment(payload: DecodedPayload, param: PartyRequestDto, dto: PartyCommentRequestDto): Promise<void>;
    updatePartyComment(payload: DecodedPayload, commentId: CommentRequestDto, dto: PartyCommentRequestDto): Promise<void>;
    deletePartyComment(payload: DecodedPayload, commentId: number, dto: UpdatePartyRequestDto): Promise<void>;
    getPartyRequestList(payload: DecodedPayload, partyId: number, dto: PartyCommentRequestDto): Promise<void>;
    sendPartyRequest(payload: DecodedPayload, commentId: number): Promise<void>;
    deletePartyRequest(payload: DecodedPayload, commentId: number): Promise<void>;
    getPartyInviteList(payload: DecodedPayload, partyId: number, dto: PartyCommentRequestDto): Promise<void>;
    sendPartyInvite(payload: DecodedPayload, commentId: number, nickname: string, dto: PartyRequestDto): Promise<void>;
    deletePartyInvite(payload: DecodedPayload, commentId: number, nickname: string, dto: PartyRequestDto): Promise<void>;
    transferPartyLeadership(payload: DecodedPayload, commentId: number, dto: CreatePartyRequestDto): Promise<void>;
}
